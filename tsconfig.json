{
  "compilerOptions": {
    "module": "commonjs",
    "declaration": true,
    "removeComments": true,
    "emitDecoratorMetadata": true,
    "experimentalDecorators": true,
    "allowSyntheticDefaultImports": true,
    "target": "ES6",
    "sourceMap": true,
    "outDir": "./dist",
    "baseUrl": "./",
    "incremental": true,
    "skipLibCheck": true,
    "strictNullChecks": true,
    "noImplicitAny": false,
    "strictBindCallApply": false,
    "forceConsistentCasingInFileNames": false,
    "noFallthroughCasesInSwitch": false,
    "paths": {
      "@controllers/*": [
        "src/controllers/*"
      ],
      "@services/*": [
        "src/services/*"
      ],
      "@repositories/*": [
        "src/repositories/*"
      ],
      "@models/*": [
        "src/models/*"
      ],
      "@utils/*": [
        "src/utils/*"
      ],
      "@modules/*": [
        "src/modules/*"
      ],
      "@libs/*":[
        "src/libs/*"
      ],
      "@providers/*":[
        "src/providers/*"
      ],
      "@decorators/*":[
        "src/decorators/*"
      ]
    },
    "plugins": [
      {
        "transform": "typia/lib/transform"
      },
      {
        "transform": "@nestia/core/lib/transform",
        /**
         * Validate request body.
         * 
         *   - "assert": Use typia.assert() function
         *   - "is": Use typia.is() function
         *   - "validate": Use typia.validate() function
         *   - "assertEquals": Use typia.assertEquals() function
         *   - "equals": Use typia.equals() function
         *   - "validateEquals": Use typia.validateEquals() function
         */
        "validate": "assert",
        /**
         * Validate JSON typed response body.
         * 
         *   - "assert": Use typia.assertStringify() function
         *   - "is": Use typia.isStringify() function
         *   - "validate": Use typia.validateStringify() function
         *   - "stringify": Use typia.stringify() function, but dangerous
         *   - null: Just use JSON.stringify() function, without boosting
         */
        "stringify": "assert"
      }
      
    ]
  }
}